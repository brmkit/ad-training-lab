---
- name: CONFIGURING CERTIFICATE SERVICES
  hosts: ADCS
  gather_facts: false
  tasks:
    - name: Rename server
      win_hostname:
        name: "{{ inventory_hostname }}"
      register: rename
      
    - name: Reboot after rename
      win_reboot:
      when: rename.reboot_required
      
    - name: Set DNS to Domain Controller
      win_dns_client:
        adapter_names: '*'
        dns_servers:
        - "{{ hostvars['DC01']['ansible_host'] }}"

    - name: Join Domain
      microsoft.ad.membership:
        dns_domain_name: "{{ domain_name }}"
        domain_admin_user: Administrator@{{ domain_name }}
        domain_admin_password: "{{ domain_admin_password }}"
        state: domain
        reboot: true
  
    - name: Install ADCS
      win_feature:
        name:
        - AD-Certificate
        - ADCS-Cert-Authority
        - ADCS-Online-Cert
        - ADCS-Web-Enrollment
        - RSAT-Role-Tools
        state: present
        include_sub_features: yes
        include_management_tools: yes
      register: win_feature

    - name: Reboot after ADCS prerequisite install
      ansible.windows.win_reboot:
      when: win_feature.reboot_required

# taken from https://github.com/Orange-Cyberdefense/GOAD/blob/main/ansible/roles/adcs/tasks/main.yml
# it seems the only way

    - name: Install-ADCSCertificationAuthority-PS
      ansible.windows.win_powershell:
        script: |
          [CmdletBinding()]
          param (
              [String]
              $da_login,

              [String]
              $da_pass
          )
          $pass = ConvertTo-SecureString $da_pass -AsPlainText -Force
          $Cred = New-Object System.Management.Automation.PSCredential ($da_login, $pass)
          try {
            Install-AdcsCertificationAuthority -Credential $Cred -CAType EnterpriseRootCA -CryptoProviderName "RSA#Microsoft Software Key Storage Provider" -KeyLength 2048 -HashAlgorithmName SHA256 -ValidityPeriod Years -ValidityPeriodUnits 5 -CACommonName "{{ ca_name }}" -Force
            $Ansible.Changed = $true
          } catch {
            $Ansible.Changed = $false
          }
        error_action: stop
        parameters:
          da_login: "{{ domain_admin_login }}"
          da_pass: "{{ domain_admin_password }}"

    - name: Enable Web Enrollement
      ansible.windows.win_powershell:
        script: |
          [CmdletBinding()]
          param ()
          try {
            Install-AdcsWebEnrollment -Force
            $Ansible.Changed = $true
          } catch {
            $Ansible.Changed = $false
          }

    - name: Refresh group policy
      win_command: gpupdate /force